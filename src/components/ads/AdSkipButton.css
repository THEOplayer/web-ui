:host {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    background: var(--theoplayer-ad-skip-background, rgba(0, 0, 0, 0.7));
    color: var(--theoplayer-ad-skip-color, #fff);
    border: var(--theoplayer-ad-skip-border, 1px solid rgba(255, 255, 255, 0.5));
}

:host(:hover) {
    background: var(--theoplayer-ad-skip-hover-background, rgba(0, 0, 0, 0.9));
    color: var(--theoplayer-ad-skip-hover-color, var(--theoplayer-ad-skip-color, #fff));
    border: var(--theoplayer-ad-skip-hover-border, 1px solid #fff);
}

:host([disabled]) {
    background: var(--theoplayer-ad-skip-countdown-background, transparent);
    color: var(--theoplayer-ad-skip-countdown-color, var(--theoplayer-ad-skip-color, #fff));
    border: var(--theoplayer-ad-skip-countdown-border, 1px solid transparent);
}

[part='countdown'],
[part='skip'] {
    display: flex;
    align-items: center;
    /*
     * Overlay countdown text and skip button, so they'll both contribute to the size of the parent grid.
     * This avoids a layout shift when the countdown ends and switches to the skip button.
     * https://dev.to/nhuynh1/overlaying-elements-with-css-grid-is-so-much-cleaner-than-with-position-4hcm
     */
    grid-row: 1;
    grid-column: 1;
}

[part='skip'] {
    font-size: var(--theoplayer-ad-skip-font-size, var(--theoplayer-text-font-size, 14px));
    line-height: var(--theoplayer-ad-skip-line-height, var(--theoplayer-text-content-height, var(--theoplayer-control-height, 24px)));
}

[part='skip-icon'] {
    padding-left: var(--theoplayer-control-padding, 10px);
}

[part='skip-icon'] svg,
[part='skip-icon'] ::slotted(svg) {
    width: var(--theoplayer-ad-skip-icon-width, var(--theoplayer-control-height, 24px));
    height: var(--theoplayer-ad-skip-icon-height, var(--theoplayer-control-height, 24px));
}
