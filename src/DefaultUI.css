:host {
    box-sizing: border-box;
    position: relative;
    display: inline-block;
}

:host([hidden]) {
    display: none !important;
}

theoplayer-ui {
    width: 100%;
}

:host(:fullscreen),
:host(:fullscreen) theoplayer-ui {
    width: 100% !important;
    height: 100% !important;
}

[part='title'] {
    user-select: none;
    color: var(--theoplayer-text-color, #fff);
    padding: var(--theoplayer-control-padding, 10px);
    text-shadow: 0 0 4px rgba(0, 0, 0, 0.75);

    /* Vertically center any text */
    font-size: var(--theoplayer-text-font-size, 14px);
    line-height: var(--theoplayer-text-content-height, var(--theoplayer-control-height, 24px));
}

:host(:not([mobile])) [part='top-chrome'] *,
:host(:not([mobile])) [part='centered-chrome'] * {
    --theoplayer-button-icon-shadow: 0 0 4px rgba(0, 0, 0, 0.75);
    --theoplayer-button-hover-icon-shadow: 0 0 4px rgba(0, 0, 0, 1);
}

[part='centered-chrome'] * {
    --theoplayer-control-height: 48px;
}

[part='bottom-chrome'] {
    position: relative;
    display: flex;
    flex-flow: column nowrap;
    align-items: stretch;
}

:host([mobile]) theoplayer-ui {
    --theoplayer-control-backdrop-background-color: rgba(0, 0, 0, 0.5);
}

:host(:not([mobile])) [part='bottom-chrome']::before {
    content: '';
    display: block;
    position: absolute;
    inset: 0;
    z-index: -1;
    background: linear-gradient(to bottom, transparent, black);
    pointer-events: none;
}

.theoplayer-spacer {
    flex-grow: 1;
}

theoplayer-time-range {
    --theoplayer-control-height: 12px;
    --theoplayer-range-track-pointer-background: rgba(255, 255, 255, 0.5);
}

/*
 * Mobile-only and mobile-hidden elements
 */
:host([mobile]) [mobile-hidden],
:host([mobile]) theoplayer-control-bar ::slotted([mobile-hidden]),
:host(:not([mobile])) [mobile-only],
:host(:not([mobile])) theoplayer-control-bar ::slotted([mobile-only]) {
    display: none !important;
}

/*
 * Live-only and live-hidden elements
 */
:host([stream-type='live']) [live-hidden],
:host([stream-type='live']) theoplayer-control-bar ::slotted([live-hidden]),
:host(:not([stream-type='live'])) [live-only],
:host(:not([stream-type='live'])) theoplayer-control-bar ::slotted([live-only]) {
    display: none !important;
}

/*
 * Hide all controls before first play, except for the center play button
 */
theoplayer-ui:not([has-first-play]) theoplayer-control-bar *,
theoplayer-ui:not([has-first-play]) theoplayer-control-bar ::slotted(*),
theoplayer-ui:not([has-first-play]) [part='centered-chrome'] :not(theoplayer-play-button) {
    display: none !important;
}

/*
 * Hide center play button on desktop after first play
 */
:host(:not([mobile])) theoplayer-ui[has-first-play] [part='centered-chrome'] theoplayer-play-button {
    display: none !important;
}

theoplayer-volume-range {
    --theoplayer-range-padding-left: 0;
}

theoplayer-mute-button + theoplayer-volume-range {
    width: 0;
    overflow: hidden;
    --theoplayer-range-padding-right: 0;

    /* Set the internal width so it reveals, not grows */
    --theoplayer-range-track-width: 70px;
    transition: width 0.2s ease-in;
}

/* Expand volume control in all relevant states */
theoplayer-mute-button:hover + theoplayer-volume-range,
theoplayer-mute-button:focus + theoplayer-volume-range,
theoplayer-mute-button + theoplayer-volume-range:hover,
theoplayer-mute-button + theoplayer-volume-range:focus {
    width: 70px;
}

/* IE doesn't support :focus-within, so keep these separate (and use a polyfill?) */
theoplayer-mute-button:focus-within + theoplayer-volume-range,
theoplayer-mute-button + theoplayer-volume-range:focus-within {
    width: 70px;
}
